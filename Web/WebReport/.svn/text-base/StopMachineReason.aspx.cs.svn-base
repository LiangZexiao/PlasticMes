using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Collections.Generic;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using Admin.Model.Machine_MDL;
using Admin.BLL.BaseInfo_BLL;
using Admin.Model.Product_MDL;
using Admin.BLL.Product_BLL;
using Admin.SQLServerDAL.RightCtrl;
using Admin.App_Code;
using Admin.SQLServerDAL.Product_DAL;

public partial class WebReport_StopMachineReason : System.Web.UI.Page
{
    bool[] o = new bool[7] { false, false, false, false, false, false, false };
    SetCtrls dboSetCtrls = new SetCtrls();
    protected void Page_Load(object sender, EventArgs e)
    {
        Ajax.Utility.RegisterTypeForAjax(typeof(WebReport_StopMachineReason));
        try
        {
            dboSetCtrls.GetIdentiryInfo(this);
            if (IsPostBack)
            {
                o = (bool[])ViewState["authority"];
                return;
            }
            o = RightCtrl.PageRightCtrl(this.Page.User.Identity.Name.Trim(), "StopMachineReason");
            ViewState["authority"] = o;
            if (o[4]) igbPrint.Visible = false;
        }
        catch (Exception ex)
        {
            dboSetCtrls.SetExecMsg(this, ex.ToString());
        }
        if (!IsPostBack)
        {
            txtbDate.Value = System.DateTime.Now.ToString("yyyy-MM-dd");
            txteDate.Value = System.DateTime.Now.ToString("yyyy-MM-dd");
            dboSetCtrls.SetDropDownList(ddlMachine_SeatCode, new MachineSuit_DAL().selectMachineMstrAll() as IList, true, "Machine_MaterialChgAmt", "Remark");
        }
    }
    protected void igbPrint_Click(object sender, ImageClickEventArgs e)
    {
        string BeginDate = txtbDate.Value.Trim() == string.Empty ? System.DateTime.Now.ToString("yyyy-MM-dd") + " " + txtbTime.Value.Trim() : txtbDate.Value.Trim() + " " + txtbTime.Value.Trim();
        if (string.IsNullOrEmpty(BeginDate))
        {
            dboSetCtrls.SetExecMsg(this, "startdate", true);
            return;
        }
        string EndDate = (txteDate.Value.Trim() == string.Empty) ? System.DateTime.Now.ToString("yyyy-MM-dd") + " " + txteTime.Value.Trim() : txteDate.Value.Trim() + " " + txteTime.Value.Trim();
        if (dboSetCtrls.CheckDateTime("string", BeginDate, EndDate))
        {
            dboSetCtrls.SetExecMsg(this, "起始日期不能大于终止日期!!");
            return;
        }

        string ReportName = "StopMachineReason";
        Session[ReportName + "_DispatchNo"] = search.Value.Trim();
        string SeatCode = ddlMachine_SeatCode.SelectedValue.Trim();
        Session[ReportName + "_SeatCode"] = SeatCode;
        Session[ReportName + "_bDate"] = txtbDate.Value.Trim() + " " + txtbTime.Value.Trim();
        Session[ReportName + "_eDate"] = txteDate.Value.Trim() + " " + txteTime.Value.Trim();
        Session[ReportName + "_UserID"] = this.Page.User.Identity.Name.Trim();

        this.ClientScript.RegisterClientScriptBlock(GetType(), "open",
            @"<script> window.open('../repPrinter.aspx?ReportType=3&ReportName=" + ReportName + "') </script>");
    }

    #region //给工单号和派工单号赋值
    [Ajax.AjaxMethod()]
    public ArrayList GetSearhItmes(string str)
    {
        ArrayList itmes = new ArrayList();

        IList<DispatchOrder_MDL> tempList = DispatchOrder_BLL.selectDispatchOrder(0, "", "DO_NO", str);
        for (int t = 0; t < tempList.Count; t++)
        {
            itmes.Add(tempList[t].DO_No);
        }


        return itmes;
    }
    #endregion
}
