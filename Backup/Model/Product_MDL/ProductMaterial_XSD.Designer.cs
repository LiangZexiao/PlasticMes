//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4016
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Admin.Model.Product_MDL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProductMaterial_XSD")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ProductMaterial_XSD : global::System.Data.DataSet {
        
        private ProductMaterialDataTable tableProductMaterial;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProductMaterial_XSD() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProductMaterial_XSD(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProductMaterial"] != null)) {
                    base.Tables.Add(new ProductMaterialDataTable(ds.Tables["ProductMaterial"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductMaterialDataTable ProductMaterial {
            get {
                return this.tableProductMaterial;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ProductMaterial_XSD cln = ((ProductMaterial_XSD)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProductMaterial"] != null)) {
                    base.Tables.Add(new ProductMaterialDataTable(ds.Tables["ProductMaterial"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableProductMaterial = ((ProductMaterialDataTable)(base.Tables["ProductMaterial"]));
            if ((initTable == true)) {
                if ((this.tableProductMaterial != null)) {
                    this.tableProductMaterial.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ProductMaterial_XSD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProductMaterial_XSD.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProductMaterial = new ProductMaterialDataTable();
            base.Tables.Add(this.tableProductMaterial);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductMaterial() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProductMaterial_XSD ds = new ProductMaterial_XSD();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ProductMaterialRowChangeEventHandler(object sender, ProductMaterialRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductMaterialDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn columnFileNO;
            
            private global::System.Data.DataColumn columnProdNO;
            
            private global::System.Data.DataColumn columnModelNO;
            
            private global::System.Data.DataColumn columnProgram;
            
            private global::System.Data.DataColumn columnNO;
            
            private global::System.Data.DataColumn columnCustomerNO;
            
            private global::System.Data.DataColumn columnChineseName;
            
            private global::System.Data.DataColumn columnEnglishName;
            
            private global::System.Data.DataColumn columnCaves;
            
            private global::System.Data.DataColumn columnGrossWeight;
            
            private global::System.Data.DataColumn columnNetWeight;
            
            private global::System.Data.DataColumn columnMaterial;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnColorType;
            
            private global::System.Data.DataColumn columnColorPower;
            
            private global::System.Data.DataColumn columnMachineType;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnPublishDate;
            
            private global::System.Data.DataColumn columnVerNO;
            
            private global::System.Data.DataColumn columnMaker;
            
            private global::System.Data.DataColumn columnChecker;
            
            private global::System.Data.DataColumn columnProdDepChecker;
            
            private global::System.Data.DataColumn columnTableNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialDataTable() {
                this.TableName = "ProductMaterial";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductMaterialDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductMaterialDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileNOColumn {
                get {
                    return this.columnFileNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdNOColumn {
                get {
                    return this.columnProdNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNOColumn {
                get {
                    return this.columnModelNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramColumn {
                get {
                    return this.columnProgram;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOColumn {
                get {
                    return this.columnNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNOColumn {
                get {
                    return this.columnCustomerNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChineseNameColumn {
                get {
                    return this.columnChineseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnglishNameColumn {
                get {
                    return this.columnEnglishName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CavesColumn {
                get {
                    return this.columnCaves;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossWeightColumn {
                get {
                    return this.columnGrossWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetWeightColumn {
                get {
                    return this.columnNetWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialColumn {
                get {
                    return this.columnMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorTypeColumn {
                get {
                    return this.columnColorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorPowerColumn {
                get {
                    return this.columnColorPower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MachineTypeColumn {
                get {
                    return this.columnMachineType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PublishDateColumn {
                get {
                    return this.columnPublishDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerNOColumn {
                get {
                    return this.columnVerNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerColumn {
                get {
                    return this.columnMaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckerColumn {
                get {
                    return this.columnChecker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdDepCheckerColumn {
                get {
                    return this.columnProdDepChecker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableNOColumn {
                get {
                    return this.columnTableNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialRow this[int index] {
                get {
                    return ((ProductMaterialRow)(this.Rows[index]));
                }
            }
            
            public event ProductMaterialRowChangeEventHandler ProductMaterialRowChanging;
            
            public event ProductMaterialRowChangeEventHandler ProductMaterialRowChanged;
            
            public event ProductMaterialRowChangeEventHandler ProductMaterialRowDeleting;
            
            public event ProductMaterialRowChangeEventHandler ProductMaterialRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductMaterialRow(ProductMaterialRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialRow AddProductMaterialRow(
                        string Customer, 
                        string Model, 
                        string FileNO, 
                        string ProdNO, 
                        string ModelNO, 
                        string Program, 
                        string NO, 
                        string CustomerNO, 
                        string ChineseName, 
                        string EnglishName, 
                        int Caves, 
                        decimal GrossWeight, 
                        decimal NetWeight, 
                        string Material, 
                        string Type, 
                        string ColorType, 
                        string ColorPower, 
                        string MachineType, 
                        string Memo, 
                        string PublishDate, 
                        string VerNO, 
                        string Maker, 
                        string Checker, 
                        string ProdDepChecker, 
                        string TableNO) {
                ProductMaterialRow rowProductMaterialRow = ((ProductMaterialRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Customer,
                        Model,
                        FileNO,
                        ProdNO,
                        ModelNO,
                        Program,
                        NO,
                        CustomerNO,
                        ChineseName,
                        EnglishName,
                        Caves,
                        GrossWeight,
                        NetWeight,
                        Material,
                        Type,
                        ColorType,
                        ColorPower,
                        MachineType,
                        Memo,
                        PublishDate,
                        VerNO,
                        Maker,
                        Checker,
                        ProdDepChecker,
                        TableNO};
                rowProductMaterialRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductMaterialRow);
                return rowProductMaterialRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialRow FindByID(int ID) {
                return ((ProductMaterialRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductMaterialDataTable cln = ((ProductMaterialDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductMaterialDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnModel = base.Columns["Model"];
                this.columnFileNO = base.Columns["FileNO"];
                this.columnProdNO = base.Columns["ProdNO"];
                this.columnModelNO = base.Columns["ModelNO"];
                this.columnProgram = base.Columns["Program"];
                this.columnNO = base.Columns["NO"];
                this.columnCustomerNO = base.Columns["CustomerNO"];
                this.columnChineseName = base.Columns["ChineseName"];
                this.columnEnglishName = base.Columns["EnglishName"];
                this.columnCaves = base.Columns["Caves"];
                this.columnGrossWeight = base.Columns["GrossWeight"];
                this.columnNetWeight = base.Columns["NetWeight"];
                this.columnMaterial = base.Columns["Material"];
                this.columnType = base.Columns["Type"];
                this.columnColorType = base.Columns["ColorType"];
                this.columnColorPower = base.Columns["ColorPower"];
                this.columnMachineType = base.Columns["MachineType"];
                this.columnMemo = base.Columns["Memo"];
                this.columnPublishDate = base.Columns["PublishDate"];
                this.columnVerNO = base.Columns["VerNO"];
                this.columnMaker = base.Columns["Maker"];
                this.columnChecker = base.Columns["Checker"];
                this.columnProdDepChecker = base.Columns["ProdDepChecker"];
                this.columnTableNO = base.Columns["TableNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnFileNO = new global::System.Data.DataColumn("FileNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNO);
                this.columnProdNO = new global::System.Data.DataColumn("ProdNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdNO);
                this.columnModelNO = new global::System.Data.DataColumn("ModelNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNO);
                this.columnProgram = new global::System.Data.DataColumn("Program", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgram);
                this.columnNO = new global::System.Data.DataColumn("NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO);
                this.columnCustomerNO = new global::System.Data.DataColumn("CustomerNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNO);
                this.columnChineseName = new global::System.Data.DataColumn("ChineseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChineseName);
                this.columnEnglishName = new global::System.Data.DataColumn("EnglishName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnglishName);
                this.columnCaves = new global::System.Data.DataColumn("Caves", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaves);
                this.columnGrossWeight = new global::System.Data.DataColumn("GrossWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossWeight);
                this.columnNetWeight = new global::System.Data.DataColumn("NetWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetWeight);
                this.columnMaterial = new global::System.Data.DataColumn("Material", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterial);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnColorType = new global::System.Data.DataColumn("ColorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorType);
                this.columnColorPower = new global::System.Data.DataColumn("ColorPower", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorPower);
                this.columnMachineType = new global::System.Data.DataColumn("MachineType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachineType);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnPublishDate = new global::System.Data.DataColumn("PublishDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublishDate);
                this.columnVerNO = new global::System.Data.DataColumn("VerNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerNO);
                this.columnMaker = new global::System.Data.DataColumn("Maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaker);
                this.columnChecker = new global::System.Data.DataColumn("Checker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChecker);
                this.columnProdDepChecker = new global::System.Data.DataColumn("ProdDepChecker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdDepChecker);
                this.columnTableNO = new global::System.Data.DataColumn("TableNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = 1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnCustomer.AllowDBNull = false;
                this.columnCustomer.MaxLength = 200;
                this.columnModel.MaxLength = 50;
                this.columnFileNO.MaxLength = 50;
                this.columnProdNO.MaxLength = 50;
                this.columnModelNO.MaxLength = 50;
                this.columnProgram.MaxLength = 50;
                this.columnNO.MaxLength = 50;
                this.columnCustomerNO.MaxLength = 50;
                this.columnChineseName.MaxLength = 200;
                this.columnEnglishName.MaxLength = 200;
                this.columnMaterial.MaxLength = 50;
                this.columnType.MaxLength = 50;
                this.columnColorType.MaxLength = 50;
                this.columnColorPower.MaxLength = 50;
                this.columnMachineType.MaxLength = 50;
                this.columnMemo.MaxLength = 200;
                this.columnVerNO.MaxLength = 50;
                this.columnMaker.MaxLength = 50;
                this.columnChecker.MaxLength = 50;
                this.columnProdDepChecker.MaxLength = 50;
                this.columnTableNO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialRow NewProductMaterialRow() {
                return ((ProductMaterialRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductMaterialRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductMaterialRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductMaterialRowChanged != null)) {
                    this.ProductMaterialRowChanged(this, new ProductMaterialRowChangeEvent(((ProductMaterialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductMaterialRowChanging != null)) {
                    this.ProductMaterialRowChanging(this, new ProductMaterialRowChangeEvent(((ProductMaterialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductMaterialRowDeleted != null)) {
                    this.ProductMaterialRowDeleted(this, new ProductMaterialRowChangeEvent(((ProductMaterialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductMaterialRowDeleting != null)) {
                    this.ProductMaterialRowDeleting(this, new ProductMaterialRowChangeEvent(((ProductMaterialRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductMaterialRow(ProductMaterialRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProductMaterial_XSD ds = new ProductMaterial_XSD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductMaterialDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductMaterialRow : global::System.Data.DataRow {
            
            private ProductMaterialDataTable tableProductMaterial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductMaterialRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductMaterial = ((ProductMaterialDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableProductMaterial.IDColumn]));
                }
                set {
                    this[this.tableProductMaterial.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    return ((string)(this[this.tableProductMaterial.CustomerColumn]));
                }
                set {
                    this[this.tableProductMaterial.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileNO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.FileNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“FileNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.FileNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdNO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ProdNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“ProdNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ProdNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ModelNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“ModelNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ModelNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Program {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ProgramColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Program”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ProgramColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerNO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.CustomerNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“CustomerNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.CustomerNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChineseName {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ChineseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“ChineseName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ChineseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnglishName {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.EnglishNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“EnglishName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.EnglishNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Caves {
                get {
                    try {
                        return ((int)(this[this.tableProductMaterial.CavesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Caves”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.CavesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GrossWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableProductMaterial.GrossWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“GrossWeight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.GrossWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableProductMaterial.NetWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“NetWeight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.NetWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Material {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.MaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Material”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.MaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Type”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorType {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ColorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“ColorType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ColorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorPower {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ColorPowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“ColorPower”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ColorPowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MachineType {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.MachineTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“MachineType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.MachineTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Memo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PublishDate {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.PublishDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“PublishDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.PublishDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VerNO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.VerNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“VerNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.VerNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Maker {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.MakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Maker”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.MakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Checker {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.CheckerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“Checker”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.CheckerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdDepChecker {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.ProdDepCheckerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“ProdDepChecker”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.ProdDepCheckerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableNO {
                get {
                    try {
                        return ((string)(this[this.tableProductMaterial.TableNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProductMaterial”中列“TableNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProductMaterial.TableNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNull() {
                return this.IsNull(this.tableProductMaterial.ModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNull() {
                this[this.tableProductMaterial.ModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileNONull() {
                return this.IsNull(this.tableProductMaterial.FileNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileNONull() {
                this[this.tableProductMaterial.FileNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdNONull() {
                return this.IsNull(this.tableProductMaterial.ProdNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdNONull() {
                this[this.tableProductMaterial.ProdNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNONull() {
                return this.IsNull(this.tableProductMaterial.ModelNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNONull() {
                this[this.tableProductMaterial.ModelNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramNull() {
                return this.IsNull(this.tableProductMaterial.ProgramColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramNull() {
                this[this.tableProductMaterial.ProgramColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNONull() {
                return this.IsNull(this.tableProductMaterial.NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNONull() {
                this[this.tableProductMaterial.NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNONull() {
                return this.IsNull(this.tableProductMaterial.CustomerNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNONull() {
                this[this.tableProductMaterial.CustomerNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChineseNameNull() {
                return this.IsNull(this.tableProductMaterial.ChineseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChineseNameNull() {
                this[this.tableProductMaterial.ChineseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnglishNameNull() {
                return this.IsNull(this.tableProductMaterial.EnglishNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnglishNameNull() {
                this[this.tableProductMaterial.EnglishNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCavesNull() {
                return this.IsNull(this.tableProductMaterial.CavesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCavesNull() {
                this[this.tableProductMaterial.CavesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossWeightNull() {
                return this.IsNull(this.tableProductMaterial.GrossWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossWeightNull() {
                this[this.tableProductMaterial.GrossWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetWeightNull() {
                return this.IsNull(this.tableProductMaterial.NetWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetWeightNull() {
                this[this.tableProductMaterial.NetWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialNull() {
                return this.IsNull(this.tableProductMaterial.MaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialNull() {
                this[this.tableProductMaterial.MaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableProductMaterial.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableProductMaterial.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorTypeNull() {
                return this.IsNull(this.tableProductMaterial.ColorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorTypeNull() {
                this[this.tableProductMaterial.ColorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorPowerNull() {
                return this.IsNull(this.tableProductMaterial.ColorPowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorPowerNull() {
                this[this.tableProductMaterial.ColorPowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMachineTypeNull() {
                return this.IsNull(this.tableProductMaterial.MachineTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMachineTypeNull() {
                this[this.tableProductMaterial.MachineTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tableProductMaterial.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tableProductMaterial.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPublishDateNull() {
                return this.IsNull(this.tableProductMaterial.PublishDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPublishDateNull() {
                this[this.tableProductMaterial.PublishDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerNONull() {
                return this.IsNull(this.tableProductMaterial.VerNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerNONull() {
                this[this.tableProductMaterial.VerNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNull() {
                return this.IsNull(this.tableProductMaterial.MakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNull() {
                this[this.tableProductMaterial.MakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckerNull() {
                return this.IsNull(this.tableProductMaterial.CheckerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckerNull() {
                this[this.tableProductMaterial.CheckerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdDepCheckerNull() {
                return this.IsNull(this.tableProductMaterial.ProdDepCheckerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdDepCheckerNull() {
                this[this.tableProductMaterial.ProdDepCheckerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTableNONull() {
                return this.IsNull(this.tableProductMaterial.TableNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTableNONull() {
                this[this.tableProductMaterial.TableNOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductMaterialRowChangeEvent : global::System.EventArgs {
            
            private ProductMaterialRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialRowChangeEvent(ProductMaterialRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductMaterialRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591