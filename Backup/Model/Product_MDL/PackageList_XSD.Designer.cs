//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4016
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Admin.Model.Product_MDL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PackageList_XSD")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PackageList_XSD : global::System.Data.DataSet {
        
        private PackageListDataTable tablePackageList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PackageList_XSD() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PackageList_XSD(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PackageList"] != null)) {
                    base.Tables.Add(new PackageListDataTable(ds.Tables["PackageList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PackageListDataTable PackageList {
            get {
                return this.tablePackageList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PackageList_XSD cln = ((PackageList_XSD)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PackageList"] != null)) {
                    base.Tables.Add(new PackageListDataTable(ds.Tables["PackageList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePackageList = ((PackageListDataTable)(base.Tables["PackageList"]));
            if ((initTable == true)) {
                if ((this.tablePackageList != null)) {
                    this.tablePackageList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PackageList_XSD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PackageList_XSD.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePackageList = new PackageListDataTable();
            base.Tables.Add(this.tablePackageList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePackageList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PackageList_XSD ds = new PackageList_XSD();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PackageListRowChangeEventHandler(object sender, PackageListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PackageListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnPN;
            
            private global::System.Data.DataColumn columnProdNO;
            
            private global::System.Data.DataColumn columnProdName;
            
            private global::System.Data.DataColumn columnNumOfBox;
            
            private global::System.Data.DataColumn columnFileNO;
            
            private global::System.Data.DataColumn columnPackageNO;
            
            private global::System.Data.DataColumn columnPackageModel;
            
            private global::System.Data.DataColumn columnGlueBoxNO;
            
            private global::System.Data.DataColumn columnGlueBoxModel;
            
            private global::System.Data.DataColumn columnGluePackageModel;
            
            private global::System.Data.DataColumn columnGluePackageNum;
            
            private global::System.Data.DataColumn columnLongKnifeModel;
            
            private global::System.Data.DataColumn columnLongKnifeNum;
            
            private global::System.Data.DataColumn columnShortKnifeModel;
            
            private global::System.Data.DataColumn columnShortKnifeNum;
            
            private global::System.Data.DataColumn columnBlockOffCardModel;
            
            private global::System.Data.DataColumn columnBlockOffCardNum;
            
            private global::System.Data.DataColumn columnFlatCardModel;
            
            private global::System.Data.DataColumn columnFlatCardNum;
            
            private global::System.Data.DataColumn columnAbsorbPlasticModel;
            
            private global::System.Data.DataColumn columnAbsorbPlasticNum;
            
            private global::System.Data.DataColumn columnNotice;
            
            private global::System.Data.DataColumn columnPagkagePhoto;
            
            private global::System.Data.DataColumn columnPagkagePhotoType;
            
            private global::System.Data.DataColumn columnPackageType;
            
            private global::System.Data.DataColumn columnCellLineNum;
            
            private global::System.Data.DataColumn columnLineNum;
            
            private global::System.Data.DataColumn columnCellPCS;
            
            private global::System.Data.DataColumn columnBoxNum;
            
            private global::System.Data.DataColumn columnTotalPCS;
            
            private global::System.Data.DataColumn columnCellBlockOff;
            
            private global::System.Data.DataColumn columnFlatCard;
            
            private global::System.Data.DataColumn columnNewVer;
            
            private global::System.Data.DataColumn columnChangedVer;
            
            private global::System.Data.DataColumn columnEffectDate;
            
            private global::System.Data.DataColumn columnNewOldChangedFlag;
            
            private global::System.Data.DataColumn columnNewOldVer;
            
            private global::System.Data.DataColumn columnOldType;
            
            private global::System.Data.DataColumn columnOldType_BoxNum;
            
            private global::System.Data.DataColumn columnOldType_Num;
            
            private global::System.Data.DataColumn columnOldType_CellNum;
            
            private global::System.Data.DataColumn columnOldType_BoxPCS;
            
            private global::System.Data.DataColumn columnOldType_GlueModel;
            
            private global::System.Data.DataColumn columnOldType_Other;
            
            private global::System.Data.DataColumn columnTableMaker;
            
            private global::System.Data.DataColumn columnChecker;
            
            private global::System.Data.DataColumn columnEffectedDate;
            
            private global::System.Data.DataColumn columnQCChecker;
            
            private global::System.Data.DataColumn columnVerNO;
            
            private global::System.Data.DataColumn columnTableNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListDataTable() {
                this.TableName = "PackageList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PackageListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PackageListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNColumn {
                get {
                    return this.columnPN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdNOColumn {
                get {
                    return this.columnProdNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdNameColumn {
                get {
                    return this.columnProdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumOfBoxColumn {
                get {
                    return this.columnNumOfBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileNOColumn {
                get {
                    return this.columnFileNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackageNOColumn {
                get {
                    return this.columnPackageNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackageModelColumn {
                get {
                    return this.columnPackageModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlueBoxNOColumn {
                get {
                    return this.columnGlueBoxNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlueBoxModelColumn {
                get {
                    return this.columnGlueBoxModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GluePackageModelColumn {
                get {
                    return this.columnGluePackageModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GluePackageNumColumn {
                get {
                    return this.columnGluePackageNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongKnifeModelColumn {
                get {
                    return this.columnLongKnifeModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongKnifeNumColumn {
                get {
                    return this.columnLongKnifeNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortKnifeModelColumn {
                get {
                    return this.columnShortKnifeModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortKnifeNumColumn {
                get {
                    return this.columnShortKnifeNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockOffCardModelColumn {
                get {
                    return this.columnBlockOffCardModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockOffCardNumColumn {
                get {
                    return this.columnBlockOffCardNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlatCardModelColumn {
                get {
                    return this.columnFlatCardModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlatCardNumColumn {
                get {
                    return this.columnFlatCardNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsorbPlasticModelColumn {
                get {
                    return this.columnAbsorbPlasticModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsorbPlasticNumColumn {
                get {
                    return this.columnAbsorbPlasticNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoticeColumn {
                get {
                    return this.columnNotice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PagkagePhotoColumn {
                get {
                    return this.columnPagkagePhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PagkagePhotoTypeColumn {
                get {
                    return this.columnPagkagePhotoType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackageTypeColumn {
                get {
                    return this.columnPackageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellLineNumColumn {
                get {
                    return this.columnCellLineNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LineNumColumn {
                get {
                    return this.columnLineNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellPCSColumn {
                get {
                    return this.columnCellPCS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoxNumColumn {
                get {
                    return this.columnBoxNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPCSColumn {
                get {
                    return this.columnTotalPCS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellBlockOffColumn {
                get {
                    return this.columnCellBlockOff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlatCardColumn {
                get {
                    return this.columnFlatCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewVerColumn {
                get {
                    return this.columnNewVer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedVerColumn {
                get {
                    return this.columnChangedVer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectDateColumn {
                get {
                    return this.columnEffectDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewOldChangedFlagColumn {
                get {
                    return this.columnNewOldChangedFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewOldVerColumn {
                get {
                    return this.columnNewOldVer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldTypeColumn {
                get {
                    return this.columnOldType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldType_BoxNumColumn {
                get {
                    return this.columnOldType_BoxNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldType_NumColumn {
                get {
                    return this.columnOldType_Num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldType_CellNumColumn {
                get {
                    return this.columnOldType_CellNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldType_BoxPCSColumn {
                get {
                    return this.columnOldType_BoxPCS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldType_GlueModelColumn {
                get {
                    return this.columnOldType_GlueModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldType_OtherColumn {
                get {
                    return this.columnOldType_Other;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableMakerColumn {
                get {
                    return this.columnTableMaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckerColumn {
                get {
                    return this.columnChecker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectedDateColumn {
                get {
                    return this.columnEffectedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QCCheckerColumn {
                get {
                    return this.columnQCChecker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerNOColumn {
                get {
                    return this.columnVerNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableNOColumn {
                get {
                    return this.columnTableNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListRow this[int index] {
                get {
                    return ((PackageListRow)(this.Rows[index]));
                }
            }
            
            public event PackageListRowChangeEventHandler PackageListRowChanging;
            
            public event PackageListRowChangeEventHandler PackageListRowChanged;
            
            public event PackageListRowChangeEventHandler PackageListRowDeleting;
            
            public event PackageListRowChangeEventHandler PackageListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPackageListRow(PackageListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListRow AddPackageListRow(
                        string CompanyName, 
                        string PN, 
                        string ProdNO, 
                        string ProdName, 
                        int NumOfBox, 
                        string FileNO, 
                        string PackageNO, 
                        string PackageModel, 
                        string GlueBoxNO, 
                        string GlueBoxModel, 
                        string GluePackageModel, 
                        int GluePackageNum, 
                        string LongKnifeModel, 
                        int LongKnifeNum, 
                        string ShortKnifeModel, 
                        int ShortKnifeNum, 
                        string BlockOffCardModel, 
                        int BlockOffCardNum, 
                        string FlatCardModel, 
                        int FlatCardNum, 
                        string AbsorbPlasticModel, 
                        int AbsorbPlasticNum, 
                        string Notice, 
                        byte[] PagkagePhoto, 
                        string PagkagePhotoType, 
                        string PackageType, 
                        int CellLineNum, 
                        int LineNum, 
                        int CellPCS, 
                        int BoxNum, 
                        int TotalPCS, 
                        int CellBlockOff, 
                        int FlatCard, 
                        int NewVer, 
                        int ChangedVer, 
                        string EffectDate, 
                        int NewOldChangedFlag, 
                        int NewOldVer, 
                        string OldType, 
                        int OldType_BoxNum, 
                        int OldType_Num, 
                        int OldType_CellNum, 
                        int OldType_BoxPCS, 
                        string OldType_GlueModel, 
                        string OldType_Other, 
                        string TableMaker, 
                        string Checker, 
                        string EffectedDate, 
                        string QCChecker, 
                        string VerNO, 
                        string TableNO) {
                PackageListRow rowPackageListRow = ((PackageListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CompanyName,
                        PN,
                        ProdNO,
                        ProdName,
                        NumOfBox,
                        FileNO,
                        PackageNO,
                        PackageModel,
                        GlueBoxNO,
                        GlueBoxModel,
                        GluePackageModel,
                        GluePackageNum,
                        LongKnifeModel,
                        LongKnifeNum,
                        ShortKnifeModel,
                        ShortKnifeNum,
                        BlockOffCardModel,
                        BlockOffCardNum,
                        FlatCardModel,
                        FlatCardNum,
                        AbsorbPlasticModel,
                        AbsorbPlasticNum,
                        Notice,
                        PagkagePhoto,
                        PagkagePhotoType,
                        PackageType,
                        CellLineNum,
                        LineNum,
                        CellPCS,
                        BoxNum,
                        TotalPCS,
                        CellBlockOff,
                        FlatCard,
                        NewVer,
                        ChangedVer,
                        EffectDate,
                        NewOldChangedFlag,
                        NewOldVer,
                        OldType,
                        OldType_BoxNum,
                        OldType_Num,
                        OldType_CellNum,
                        OldType_BoxPCS,
                        OldType_GlueModel,
                        OldType_Other,
                        TableMaker,
                        Checker,
                        EffectedDate,
                        QCChecker,
                        VerNO,
                        TableNO};
                rowPackageListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPackageListRow);
                return rowPackageListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListRow FindByID(int ID) {
                return ((PackageListRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PackageListDataTable cln = ((PackageListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PackageListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnPN = base.Columns["PN"];
                this.columnProdNO = base.Columns["ProdNO"];
                this.columnProdName = base.Columns["ProdName"];
                this.columnNumOfBox = base.Columns["NumOfBox"];
                this.columnFileNO = base.Columns["FileNO"];
                this.columnPackageNO = base.Columns["PackageNO"];
                this.columnPackageModel = base.Columns["PackageModel"];
                this.columnGlueBoxNO = base.Columns["GlueBoxNO"];
                this.columnGlueBoxModel = base.Columns["GlueBoxModel"];
                this.columnGluePackageModel = base.Columns["GluePackageModel"];
                this.columnGluePackageNum = base.Columns["GluePackageNum"];
                this.columnLongKnifeModel = base.Columns["LongKnifeModel"];
                this.columnLongKnifeNum = base.Columns["LongKnifeNum"];
                this.columnShortKnifeModel = base.Columns["ShortKnifeModel"];
                this.columnShortKnifeNum = base.Columns["ShortKnifeNum"];
                this.columnBlockOffCardModel = base.Columns["BlockOffCardModel"];
                this.columnBlockOffCardNum = base.Columns["BlockOffCardNum"];
                this.columnFlatCardModel = base.Columns["FlatCardModel"];
                this.columnFlatCardNum = base.Columns["FlatCardNum"];
                this.columnAbsorbPlasticModel = base.Columns["AbsorbPlasticModel"];
                this.columnAbsorbPlasticNum = base.Columns["AbsorbPlasticNum"];
                this.columnNotice = base.Columns["Notice"];
                this.columnPagkagePhoto = base.Columns["PagkagePhoto"];
                this.columnPagkagePhotoType = base.Columns["PagkagePhotoType"];
                this.columnPackageType = base.Columns["PackageType"];
                this.columnCellLineNum = base.Columns["CellLineNum"];
                this.columnLineNum = base.Columns["LineNum"];
                this.columnCellPCS = base.Columns["CellPCS"];
                this.columnBoxNum = base.Columns["BoxNum"];
                this.columnTotalPCS = base.Columns["TotalPCS"];
                this.columnCellBlockOff = base.Columns["CellBlockOff"];
                this.columnFlatCard = base.Columns["FlatCard"];
                this.columnNewVer = base.Columns["NewVer"];
                this.columnChangedVer = base.Columns["ChangedVer"];
                this.columnEffectDate = base.Columns["EffectDate"];
                this.columnNewOldChangedFlag = base.Columns["NewOldChangedFlag"];
                this.columnNewOldVer = base.Columns["NewOldVer"];
                this.columnOldType = base.Columns["OldType"];
                this.columnOldType_BoxNum = base.Columns["OldType_BoxNum"];
                this.columnOldType_Num = base.Columns["OldType_Num"];
                this.columnOldType_CellNum = base.Columns["OldType_CellNum"];
                this.columnOldType_BoxPCS = base.Columns["OldType_BoxPCS"];
                this.columnOldType_GlueModel = base.Columns["OldType_GlueModel"];
                this.columnOldType_Other = base.Columns["OldType_Other"];
                this.columnTableMaker = base.Columns["TableMaker"];
                this.columnChecker = base.Columns["Checker"];
                this.columnEffectedDate = base.Columns["EffectedDate"];
                this.columnQCChecker = base.Columns["QCChecker"];
                this.columnVerNO = base.Columns["VerNO"];
                this.columnTableNO = base.Columns["TableNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnPN = new global::System.Data.DataColumn("PN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPN);
                this.columnProdNO = new global::System.Data.DataColumn("ProdNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdNO);
                this.columnProdName = new global::System.Data.DataColumn("ProdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdName);
                this.columnNumOfBox = new global::System.Data.DataColumn("NumOfBox", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumOfBox);
                this.columnFileNO = new global::System.Data.DataColumn("FileNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNO);
                this.columnPackageNO = new global::System.Data.DataColumn("PackageNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageNO);
                this.columnPackageModel = new global::System.Data.DataColumn("PackageModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageModel);
                this.columnGlueBoxNO = new global::System.Data.DataColumn("GlueBoxNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlueBoxNO);
                this.columnGlueBoxModel = new global::System.Data.DataColumn("GlueBoxModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlueBoxModel);
                this.columnGluePackageModel = new global::System.Data.DataColumn("GluePackageModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGluePackageModel);
                this.columnGluePackageNum = new global::System.Data.DataColumn("GluePackageNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGluePackageNum);
                this.columnLongKnifeModel = new global::System.Data.DataColumn("LongKnifeModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongKnifeModel);
                this.columnLongKnifeNum = new global::System.Data.DataColumn("LongKnifeNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongKnifeNum);
                this.columnShortKnifeModel = new global::System.Data.DataColumn("ShortKnifeModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortKnifeModel);
                this.columnShortKnifeNum = new global::System.Data.DataColumn("ShortKnifeNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortKnifeNum);
                this.columnBlockOffCardModel = new global::System.Data.DataColumn("BlockOffCardModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockOffCardModel);
                this.columnBlockOffCardNum = new global::System.Data.DataColumn("BlockOffCardNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockOffCardNum);
                this.columnFlatCardModel = new global::System.Data.DataColumn("FlatCardModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlatCardModel);
                this.columnFlatCardNum = new global::System.Data.DataColumn("FlatCardNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlatCardNum);
                this.columnAbsorbPlasticModel = new global::System.Data.DataColumn("AbsorbPlasticModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsorbPlasticModel);
                this.columnAbsorbPlasticNum = new global::System.Data.DataColumn("AbsorbPlasticNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsorbPlasticNum);
                this.columnNotice = new global::System.Data.DataColumn("Notice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotice);
                this.columnPagkagePhoto = new global::System.Data.DataColumn("PagkagePhoto", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPagkagePhoto);
                this.columnPagkagePhotoType = new global::System.Data.DataColumn("PagkagePhotoType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPagkagePhotoType);
                this.columnPackageType = new global::System.Data.DataColumn("PackageType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageType);
                this.columnCellLineNum = new global::System.Data.DataColumn("CellLineNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellLineNum);
                this.columnLineNum = new global::System.Data.DataColumn("LineNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineNum);
                this.columnCellPCS = new global::System.Data.DataColumn("CellPCS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellPCS);
                this.columnBoxNum = new global::System.Data.DataColumn("BoxNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxNum);
                this.columnTotalPCS = new global::System.Data.DataColumn("TotalPCS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPCS);
                this.columnCellBlockOff = new global::System.Data.DataColumn("CellBlockOff", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellBlockOff);
                this.columnFlatCard = new global::System.Data.DataColumn("FlatCard", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlatCard);
                this.columnNewVer = new global::System.Data.DataColumn("NewVer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewVer);
                this.columnChangedVer = new global::System.Data.DataColumn("ChangedVer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedVer);
                this.columnEffectDate = new global::System.Data.DataColumn("EffectDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectDate);
                this.columnNewOldChangedFlag = new global::System.Data.DataColumn("NewOldChangedFlag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewOldChangedFlag);
                this.columnNewOldVer = new global::System.Data.DataColumn("NewOldVer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewOldVer);
                this.columnOldType = new global::System.Data.DataColumn("OldType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType);
                this.columnOldType_BoxNum = new global::System.Data.DataColumn("OldType_BoxNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType_BoxNum);
                this.columnOldType_Num = new global::System.Data.DataColumn("OldType_Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType_Num);
                this.columnOldType_CellNum = new global::System.Data.DataColumn("OldType_CellNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType_CellNum);
                this.columnOldType_BoxPCS = new global::System.Data.DataColumn("OldType_BoxPCS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType_BoxPCS);
                this.columnOldType_GlueModel = new global::System.Data.DataColumn("OldType_GlueModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType_GlueModel);
                this.columnOldType_Other = new global::System.Data.DataColumn("OldType_Other", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldType_Other);
                this.columnTableMaker = new global::System.Data.DataColumn("TableMaker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableMaker);
                this.columnChecker = new global::System.Data.DataColumn("Checker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChecker);
                this.columnEffectedDate = new global::System.Data.DataColumn("EffectedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectedDate);
                this.columnQCChecker = new global::System.Data.DataColumn("QCChecker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCChecker);
                this.columnVerNO = new global::System.Data.DataColumn("VerNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerNO);
                this.columnTableNO = new global::System.Data.DataColumn("TableNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = 1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnCompanyName.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 200;
                this.columnPN.AllowDBNull = false;
                this.columnPN.MaxLength = 50;
                this.columnProdNO.AllowDBNull = false;
                this.columnProdNO.MaxLength = 50;
                this.columnProdName.MaxLength = 200;
                this.columnFileNO.MaxLength = 50;
                this.columnPackageNO.MaxLength = 50;
                this.columnPackageModel.MaxLength = 50;
                this.columnGlueBoxNO.MaxLength = 50;
                this.columnGlueBoxModel.MaxLength = 50;
                this.columnGluePackageModel.MaxLength = 50;
                this.columnLongKnifeModel.MaxLength = 50;
                this.columnShortKnifeModel.MaxLength = 50;
                this.columnBlockOffCardModel.MaxLength = 50;
                this.columnFlatCardModel.MaxLength = 50;
                this.columnAbsorbPlasticModel.MaxLength = 50;
                this.columnNotice.MaxLength = 200;
                this.columnPagkagePhotoType.MaxLength = 50;
                this.columnPackageType.MaxLength = 50;
                this.columnOldType.MaxLength = 50;
                this.columnOldType_GlueModel.MaxLength = 50;
                this.columnOldType_Other.MaxLength = 50;
                this.columnTableMaker.AllowDBNull = false;
                this.columnTableMaker.MaxLength = 50;
                this.columnChecker.AllowDBNull = false;
                this.columnChecker.MaxLength = 50;
                this.columnEffectedDate.AllowDBNull = false;
                this.columnQCChecker.AllowDBNull = false;
                this.columnQCChecker.MaxLength = 50;
                this.columnVerNO.AllowDBNull = false;
                this.columnVerNO.MaxLength = 50;
                this.columnTableNO.AllowDBNull = false;
                this.columnTableNO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListRow NewPackageListRow() {
                return ((PackageListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PackageListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PackageListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PackageListRowChanged != null)) {
                    this.PackageListRowChanged(this, new PackageListRowChangeEvent(((PackageListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PackageListRowChanging != null)) {
                    this.PackageListRowChanging(this, new PackageListRowChangeEvent(((PackageListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PackageListRowDeleted != null)) {
                    this.PackageListRowDeleted(this, new PackageListRowChangeEvent(((PackageListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PackageListRowDeleting != null)) {
                    this.PackageListRowDeleting(this, new PackageListRowChangeEvent(((PackageListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePackageListRow(PackageListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PackageList_XSD ds = new PackageList_XSD();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PackageListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PackageListRow : global::System.Data.DataRow {
            
            private PackageListDataTable tablePackageList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PackageListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePackageList = ((PackageListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tablePackageList.IDColumn]));
                }
                set {
                    this[this.tablePackageList.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    return ((string)(this[this.tablePackageList.CompanyNameColumn]));
                }
                set {
                    this[this.tablePackageList.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PN {
                get {
                    return ((string)(this[this.tablePackageList.PNColumn]));
                }
                set {
                    this[this.tablePackageList.PNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdNO {
                get {
                    return ((string)(this[this.tablePackageList.ProdNOColumn]));
                }
                set {
                    this[this.tablePackageList.ProdNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdName {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.ProdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“ProdName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.ProdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumOfBox {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.NumOfBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“NumOfBox”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.NumOfBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FileNO {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.FileNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“FileNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.FileNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackageNO {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.PackageNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“PackageNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.PackageNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackageModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.PackageModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“PackageModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.PackageModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlueBoxNO {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.GlueBoxNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“GlueBoxNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.GlueBoxNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlueBoxModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.GlueBoxModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“GlueBoxModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.GlueBoxModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GluePackageModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.GluePackageModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“GluePackageModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.GluePackageModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GluePackageNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.GluePackageNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“GluePackageNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.GluePackageNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LongKnifeModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.LongKnifeModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“LongKnifeModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.LongKnifeModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LongKnifeNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.LongKnifeNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“LongKnifeNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.LongKnifeNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShortKnifeModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.ShortKnifeModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“ShortKnifeModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.ShortKnifeModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShortKnifeNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.ShortKnifeNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“ShortKnifeNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.ShortKnifeNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BlockOffCardModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.BlockOffCardModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“BlockOffCardModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.BlockOffCardModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BlockOffCardNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.BlockOffCardNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“BlockOffCardNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.BlockOffCardNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlatCardModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.FlatCardModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“FlatCardModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.FlatCardModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FlatCardNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.FlatCardNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“FlatCardNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.FlatCardNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbsorbPlasticModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.AbsorbPlasticModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“AbsorbPlasticModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.AbsorbPlasticModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AbsorbPlasticNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.AbsorbPlasticNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“AbsorbPlasticNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.AbsorbPlasticNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Notice {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.NoticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“Notice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.NoticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] PagkagePhoto {
                get {
                    try {
                        return ((byte[])(this[this.tablePackageList.PagkagePhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“PagkagePhoto”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.PagkagePhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PagkagePhotoType {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.PagkagePhotoTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“PagkagePhotoType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.PagkagePhotoTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackageType {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.PackageTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“PackageType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.PackageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CellLineNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.CellLineNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“CellLineNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.CellLineNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LineNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.LineNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“LineNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.LineNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CellPCS {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.CellPCSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“CellPCS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.CellPCSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BoxNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.BoxNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“BoxNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.BoxNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalPCS {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.TotalPCSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“TotalPCS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.TotalPCSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CellBlockOff {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.CellBlockOffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“CellBlockOff”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.CellBlockOffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FlatCard {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.FlatCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“FlatCard”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.FlatCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NewVer {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.NewVerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“NewVer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.NewVerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedVer {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.ChangedVerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“ChangedVer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.ChangedVerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffectDate {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.EffectDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“EffectDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.EffectDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NewOldChangedFlag {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.NewOldChangedFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“NewOldChangedFlag”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.NewOldChangedFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NewOldVer {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.NewOldVerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“NewOldVer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.NewOldVerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldType {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.OldTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OldType_BoxNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.OldType_BoxNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType_BoxNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldType_BoxNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OldType_Num {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.OldType_NumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType_Num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldType_NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OldType_CellNum {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.OldType_CellNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType_CellNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldType_CellNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OldType_BoxPCS {
                get {
                    try {
                        return ((int)(this[this.tablePackageList.OldType_BoxPCSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType_BoxPCS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldType_BoxPCSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldType_GlueModel {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.OldType_GlueModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType_GlueModel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldType_GlueModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldType_Other {
                get {
                    try {
                        return ((string)(this[this.tablePackageList.OldType_OtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PackageList”中列“OldType_Other”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePackageList.OldType_OtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableMaker {
                get {
                    return ((string)(this[this.tablePackageList.TableMakerColumn]));
                }
                set {
                    this[this.tablePackageList.TableMakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Checker {
                get {
                    return ((string)(this[this.tablePackageList.CheckerColumn]));
                }
                set {
                    this[this.tablePackageList.CheckerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EffectedDate {
                get {
                    return ((string)(this[this.tablePackageList.EffectedDateColumn]));
                }
                set {
                    this[this.tablePackageList.EffectedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QCChecker {
                get {
                    return ((string)(this[this.tablePackageList.QCCheckerColumn]));
                }
                set {
                    this[this.tablePackageList.QCCheckerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VerNO {
                get {
                    return ((string)(this[this.tablePackageList.VerNOColumn]));
                }
                set {
                    this[this.tablePackageList.VerNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableNO {
                get {
                    return ((string)(this[this.tablePackageList.TableNOColumn]));
                }
                set {
                    this[this.tablePackageList.TableNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdNameNull() {
                return this.IsNull(this.tablePackageList.ProdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdNameNull() {
                this[this.tablePackageList.ProdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumOfBoxNull() {
                return this.IsNull(this.tablePackageList.NumOfBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumOfBoxNull() {
                this[this.tablePackageList.NumOfBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileNONull() {
                return this.IsNull(this.tablePackageList.FileNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileNONull() {
                this[this.tablePackageList.FileNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackageNONull() {
                return this.IsNull(this.tablePackageList.PackageNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackageNONull() {
                this[this.tablePackageList.PackageNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackageModelNull() {
                return this.IsNull(this.tablePackageList.PackageModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackageModelNull() {
                this[this.tablePackageList.PackageModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlueBoxNONull() {
                return this.IsNull(this.tablePackageList.GlueBoxNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlueBoxNONull() {
                this[this.tablePackageList.GlueBoxNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlueBoxModelNull() {
                return this.IsNull(this.tablePackageList.GlueBoxModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlueBoxModelNull() {
                this[this.tablePackageList.GlueBoxModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGluePackageModelNull() {
                return this.IsNull(this.tablePackageList.GluePackageModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGluePackageModelNull() {
                this[this.tablePackageList.GluePackageModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGluePackageNumNull() {
                return this.IsNull(this.tablePackageList.GluePackageNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGluePackageNumNull() {
                this[this.tablePackageList.GluePackageNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongKnifeModelNull() {
                return this.IsNull(this.tablePackageList.LongKnifeModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongKnifeModelNull() {
                this[this.tablePackageList.LongKnifeModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongKnifeNumNull() {
                return this.IsNull(this.tablePackageList.LongKnifeNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongKnifeNumNull() {
                this[this.tablePackageList.LongKnifeNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShortKnifeModelNull() {
                return this.IsNull(this.tablePackageList.ShortKnifeModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShortKnifeModelNull() {
                this[this.tablePackageList.ShortKnifeModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShortKnifeNumNull() {
                return this.IsNull(this.tablePackageList.ShortKnifeNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShortKnifeNumNull() {
                this[this.tablePackageList.ShortKnifeNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockOffCardModelNull() {
                return this.IsNull(this.tablePackageList.BlockOffCardModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockOffCardModelNull() {
                this[this.tablePackageList.BlockOffCardModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockOffCardNumNull() {
                return this.IsNull(this.tablePackageList.BlockOffCardNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockOffCardNumNull() {
                this[this.tablePackageList.BlockOffCardNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlatCardModelNull() {
                return this.IsNull(this.tablePackageList.FlatCardModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlatCardModelNull() {
                this[this.tablePackageList.FlatCardModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlatCardNumNull() {
                return this.IsNull(this.tablePackageList.FlatCardNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlatCardNumNull() {
                this[this.tablePackageList.FlatCardNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsorbPlasticModelNull() {
                return this.IsNull(this.tablePackageList.AbsorbPlasticModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsorbPlasticModelNull() {
                this[this.tablePackageList.AbsorbPlasticModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsorbPlasticNumNull() {
                return this.IsNull(this.tablePackageList.AbsorbPlasticNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsorbPlasticNumNull() {
                this[this.tablePackageList.AbsorbPlasticNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoticeNull() {
                return this.IsNull(this.tablePackageList.NoticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoticeNull() {
                this[this.tablePackageList.NoticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPagkagePhotoNull() {
                return this.IsNull(this.tablePackageList.PagkagePhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPagkagePhotoNull() {
                this[this.tablePackageList.PagkagePhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPagkagePhotoTypeNull() {
                return this.IsNull(this.tablePackageList.PagkagePhotoTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPagkagePhotoTypeNull() {
                this[this.tablePackageList.PagkagePhotoTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackageTypeNull() {
                return this.IsNull(this.tablePackageList.PackageTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackageTypeNull() {
                this[this.tablePackageList.PackageTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellLineNumNull() {
                return this.IsNull(this.tablePackageList.CellLineNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellLineNumNull() {
                this[this.tablePackageList.CellLineNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLineNumNull() {
                return this.IsNull(this.tablePackageList.LineNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLineNumNull() {
                this[this.tablePackageList.LineNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellPCSNull() {
                return this.IsNull(this.tablePackageList.CellPCSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellPCSNull() {
                this[this.tablePackageList.CellPCSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoxNumNull() {
                return this.IsNull(this.tablePackageList.BoxNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoxNumNull() {
                this[this.tablePackageList.BoxNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPCSNull() {
                return this.IsNull(this.tablePackageList.TotalPCSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPCSNull() {
                this[this.tablePackageList.TotalPCSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellBlockOffNull() {
                return this.IsNull(this.tablePackageList.CellBlockOffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellBlockOffNull() {
                this[this.tablePackageList.CellBlockOffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlatCardNull() {
                return this.IsNull(this.tablePackageList.FlatCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlatCardNull() {
                this[this.tablePackageList.FlatCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewVerNull() {
                return this.IsNull(this.tablePackageList.NewVerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewVerNull() {
                this[this.tablePackageList.NewVerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedVerNull() {
                return this.IsNull(this.tablePackageList.ChangedVerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedVerNull() {
                this[this.tablePackageList.ChangedVerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectDateNull() {
                return this.IsNull(this.tablePackageList.EffectDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectDateNull() {
                this[this.tablePackageList.EffectDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewOldChangedFlagNull() {
                return this.IsNull(this.tablePackageList.NewOldChangedFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewOldChangedFlagNull() {
                this[this.tablePackageList.NewOldChangedFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewOldVerNull() {
                return this.IsNull(this.tablePackageList.NewOldVerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewOldVerNull() {
                this[this.tablePackageList.NewOldVerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldTypeNull() {
                return this.IsNull(this.tablePackageList.OldTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldTypeNull() {
                this[this.tablePackageList.OldTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldType_BoxNumNull() {
                return this.IsNull(this.tablePackageList.OldType_BoxNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldType_BoxNumNull() {
                this[this.tablePackageList.OldType_BoxNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldType_NumNull() {
                return this.IsNull(this.tablePackageList.OldType_NumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldType_NumNull() {
                this[this.tablePackageList.OldType_NumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldType_CellNumNull() {
                return this.IsNull(this.tablePackageList.OldType_CellNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldType_CellNumNull() {
                this[this.tablePackageList.OldType_CellNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldType_BoxPCSNull() {
                return this.IsNull(this.tablePackageList.OldType_BoxPCSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldType_BoxPCSNull() {
                this[this.tablePackageList.OldType_BoxPCSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldType_GlueModelNull() {
                return this.IsNull(this.tablePackageList.OldType_GlueModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldType_GlueModelNull() {
                this[this.tablePackageList.OldType_GlueModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldType_OtherNull() {
                return this.IsNull(this.tablePackageList.OldType_OtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldType_OtherNull() {
                this[this.tablePackageList.OldType_OtherColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PackageListRowChangeEvent : global::System.EventArgs {
            
            private PackageListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListRowChangeEvent(PackageListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PackageListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591